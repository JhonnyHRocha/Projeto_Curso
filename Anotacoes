Anotacoes


##INICIA O SERVIDOR EMBUTIDO DO PHP - DEIXA RODANDO
php artisan serve

##ALTERA O NAMESPACE DA APLICACAO
php artisan app:name NOME_PROJETO

##PASTA VENDOR
- ONDE TODO O FRAMEWORK FICA ALOCADO
- NAO SE MEXE NESSA PASTA

##PASTA PUBLIC
- DOCUMENT ROOT (TODA REQUISICAO QUE CHEGAR NA APLICACAO BATE NA INDEX DESSA PARTA)

##PASTA CONFIG
- PASTA ONDE FICA OS ARQUIVOS DE CONFIGURACAO PARA CADA AREA DO FRAMEWORK

##PASTA APP
- PASTA ONDE FICA BASICAMENTE TODO O FONTE, ARQUIVOS E TUDO MAIS (PRINCIPAL WORKFLOW)

##PASTA DATABASE
- MIGRATIONS: ONDE FICA PASSO A PASSO DA CONSTRUCAO DO BANCO DE DADOS

##INICIAR BANCO DE DADOS
sudo /usr/local/mysql/support-files/mysql.server start

##ALIAS MYSQL
alias mysql=/usr/local/mysql/bin/mysql
alias mysqladmin=/usr/local/mysql/bin/mysqladmin


##CRIA O MODEL 
php artisan make:model Client -m

##EFETIVAR A CRIACAO DA TABELA APONTADA NA PASTA DATABASE/MIGRATIONS
php artisan migrate

##CRIAR CONTROLLER
php artisan maeke:controller ProjectController

##VALIDAR SE OS MODELOS, RELACIONAMENTOS COM O BANCO DE DADOS ESTA TUDO 
##FUNCIONANDO CORRETAMENTE
php artisan tinker
- Para Instanciar fazer o codigo:  $client = new ProjetoCurso\Client
- Para exibir todos os itens: ProjetoCurso\Client::all();
- Para efetivar a insercao no banco: $client->save();
- Para filtrar: $c = ProjetoCurso\Client::find(1);

##CRIAR DADOS FICTICIOS NA TABELA
- Preencher o arquivo DATABASE/FACTORIES/MODELFACTORY
- No tinker, rodar: factory('ProjetoCurso\Client')->create(); #CRIA NO BD
factory('ProjetoCurso\Client')->make(); #CRIA APENAS NA MEMORIA
